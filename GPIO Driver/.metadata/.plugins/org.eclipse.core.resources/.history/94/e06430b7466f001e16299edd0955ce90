/*
 * Task1.c
 *
 *  Created on: Oct 20, 2023
 *      Author: SCH
 */


#include "stdio.h"
#include "avr/io.h" /* To use the IO Ports Registers */

void Eta32mini_SevenSegment_Display(unsigned char value)
{
	switch(value)
	{
	case 0:
		PORTA |= (1<<1);
		PORTA |= (1<<2);
		PORTA |= (1<<3);
		PORTA |= (1<<4);
		PORTA |= (1<<5);
		PORTA |= (1<<6);
		PORTA &= ~(1<<7);
		break;
	case 1:
		PORTA &= ~(1<<1);
		PORTA |= (1<<2);
		PORTA |= (1<<3);
		PORTA &= ~(1<<4);
		PORTA &= ~(1<<5);
		PORTA &= ~(1<<6);
		PORTA &= ~(1<<7);
		break;
	case 2:
		PORTA |= (1<<1);
		PORTA |= (1<<2);
		PORTA &= ~(1<<3);
		PORTA |= (1<<4);
		PORTA |= (1<<5);
		PORTA &= ~(1<<6);
		PORTA |= (1<<7);
		break;
	case 3:
		PORTA |= (1<<1);
		PORTA |= (1<<2);
		PORTA |= (1<<3);
		PORTA |= (1<<4);
		PORTA &= ~(1<<5);
		PORTA &= ~(1<<6);
		PORTA |= (1<<7);
		break;
	case 4:
		PORTA &= ~(1<<1);
		PORTA |= (1<<2);
		PORTA |= (1<<3);
		PORTA &= ~(1<<4);
		PORTA &= ~(1<<5);
		PORTA |= (1<<6);
		PORTA |= (1<<7);
		break;
	case 5:
		PORTA |= (1<<1);
		PORTA &= ~(1<<2);
		PORTA |= (1<<3);
		PORTA |= (1<<4);
		PORTA &= ~(1<<5);
		PORTA |= (1<<6);
		PORTA |= (1<<7);
		break;
	case 6:
		PORTA |= (1<<1);
		PORTA &= ~(1<<2);
		PORTA |= (1<<3);
		PORTA |= (1<<4);
		PORTA |= (1<<5);
		PORTA |= (1<<6);
		PORTA |= (1<<7);
		break;
	case 7:
		PORTA |= (1<<1);
		PORTA |= (1<<2);
		PORTA |= (1<<3);
		PORTA &= ~(1<<4);
		PORTA &= ~(1<<5);
		PORTA &= ~(1<<6);
		PORTA &= ~(1<<7);
		break;
	case 8:
		PORTA |= (1<<1);
		PORTA |= (1<<2);
		PORTA |= (1<<3);
		PORTA |= (1<<4);
		PORTA |= (1<<5);
		PORTA |= (1<<6);
		PORTA |= (1<<7);
		break;
	case 9:
		PORTA |= (1<<1);
		PORTA |= (1<<2);
		PORTA |= (1<<3);
		PORTA &= ~(1<<4);
		PORTA &= ~(1<<5);
		PORTA |= (1<<6);
		PORTA |= (1<<7);
		break;
	}
}

int main()
{
	/*unsigned char
	DDRB |= (0x0F);     //Configure first four pins in PORTB as output pins
	PORTB &= ~(0x0F);   //Intilize four pins with zero by clear four bits in PORTB*/

	unsigned char count = 0;

		DDRD &= ~(1<<2);         // Set Bush bottom as input in PORTD in bin 2
		DDRD &= ~(1<<3);         // Set Bush bottom as input in PORTD in bin 3

		DDRC  |= (1<<6);
		PORTC |= (1<<6);

		DDRA  |= 0xFE;

		Eta32mini_SevenSegment_Display(count); // Display ZERO value on the 7-segment at the beginning

		while(1)
		{
			if( !(PIND & (1<<PD2)) ) // check if the push button at PD5 is pressed or not
			{
				_delay_ms(30);
				if( !(PIND & (1<<PD2)) ) //second check due to switch bouncing
				{
					if(count != 9)
					{
						count++;
					}
					Eta32mini_SevenSegment_Display(count); // Display the digit on the 7-segment
				}
				while( !(PIND & (1<<PD2)) ){} // wait until switch is released
			}
			else if(!(PIND & (1<<PD3)))
			{
				_delay_ms(30);
				if( !(PIND & (1<<PD3)) ) //second check due to switch bouncing
				{
					if(count != 0)
					{
						// decrement 7-segment every press
						count--;
					}
					Eta32mini_SevenSegment_Display(count); // Display the digit on the 7-segment
				}
				while( !(PIND & (1<<PD3)) ){} // wait until switch is released
			}
		}
	}



}
